{"version":3,"sources":["utils/serviceWorker.js","state/index.js","utils/REST.js","assets/components/loader.js","assets/components/select.js","assets/css/select.js","assets/css/choice.js","assets/components/choice.js","assets/components/button.js","assets/css/button.js","assets/components/correct.js","assets/components/incorrect.js","pages/question.js","pages/score.js","pages/start.js","App.js","index.js","assets/images/logo.svg"],"names":["Boolean","window","location","hostname","match","initialState","glossaries","score","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","payload","dispatch","value","BINANCE_ENDPOINT","getQuestions","a","fetch","method","then","response","json","catch","console","log","questions","randomiseQuestions","metadata","io","Object","entries","length","pluckQuestion","existing","raw","meta","randomIndex","undefined","slug","excerpt","answer","title","main","random","Math","floor","options","push","getOptions","array","index","defaultOptions","animationData","loop","Loader","height","width","speed","withStyles","root","color","checked","props","Radio","label","fontFamily","paddingLeft","fontSize","style","FormControlLabel","styled","Button","background","border","padding","borderColor","Correct","isStopped","isPaused","Incorrect","delay","ms","Promise","res","setTimeout","Question","useState","Title","activeComponent","setComponent","useContext","answerQuestion","selection","next","questionReveal","setReveal","useEffect","Query","animateRender","Grid","item","opposite","when","className","text","iterations","effect","effectChange","effectDirection","setValue","timer","clearTimeout","durationSeconds","colors","trailColor","strokeWidth","size","isPlaying","FormControl","component","RadioGroup","aria-label","onChange","event","target","paddingBottom","control","onClick","Score","feedback","setFeedback","revealState","targetComponent","document","getElementsByClassName","comment","getFeedback","top","bottom","Start","src","logo","App","quizPhase","setPhase","setQuestion","nextQuestion","questionIndex","callQuiz","container","direction","alignItems","justify","minHeight","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.acfde28b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { createContext, useReducer } from 'react'\n\nconst initialState = { glossaries: [], score: 0 }\nconst store = createContext(initialState)\nconst { Provider } = store\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch(action.type) {\n      case 'INIT':\n        return { ...state, glossaries: action.payload }\n      case 'ANS':\n        return { ...state, score: state.score++ }\n      default:\n        return state\n    };\n  }, initialState)\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>\n};\n\nexport { store, StateProvider }\n","const BINANCE_ENDPOINT = 'https://cors-anywhere.herokuapp.com/https://api.binance.vision/api/glossaries/'\n\nexport async function getQuestions() {\n  let questions = await fetch(BINANCE_ENDPOINT,\n    {  method: 'GET' })\n    .then(response =>\n      response.json())\n    .catch(console.log)\n  return randomiseQuestions(questions, {})\n}\n\n function randomiseQuestions(metadata, io) {\n  while(Object.entries(io).length < 10){\n    io = pluckQuestion(io, metadata)\n  } return io\n}\n\nfunction pluckQuestion(existing, raw) {\n  let meta = randomIndex(raw)\n\n  if(existing[meta.slug] == undefined){\n    existing[meta.slug] = {\n      excerpt: meta.excerpt,\n      answer: meta.title,\n      ...getOptions(meta, raw)\n    }\n  } return existing\n}\n\nfunction getOptions(main, raw){\n  let random = Math.floor(Math.random() * 5)\n  let options = []\n\n  while(options.length < 5){\n    let meta = randomIndex(raw)\n    options.push(meta.title)\n  }\n\n  options[random] = main.title\n\n  return {\n    options\n  }\n}\n\nfunction randomIndex(array){\n  var index = Math.floor(Math.random() * (array.length -1))\n  return array[index++]\n}\n","import React, { Component } from 'react'\nimport Lottie from 'react-lottie';\n\nimport * as animation from \"../animations/loader.json\"\n\nconst defaultOptions = {\n    animationData: animation.default,\n    loop: true\n}\n\nfunction Loader(){\n  return(\n    <Lottie\n      options={defaultOptions}\n      height={300}\n      width={300}\n      speed={10}\n     />\n  )\n}\n\nexport default Loader;\n","import React from 'react'\n\nimport Radio from '@material-ui/core/Radio'\nimport { withStyles } from '@material-ui/core/styles'\nimport style from '../css/select'\n\nexport default withStyles(style)(props => <Radio color=\"default\" {...props} />)\n","export default { root: {\n  color: 'white',\n    '&$checked': {\n      color: '#f0ba2d',\n    },\n  },\n  checked: {\n    color: '#f0ba2d'\n  }\n}\n","export default { label: {\n    fontFamily: 'inherit',\n    paddingLeft: '.5em',\n    fontSize: '1.75rem'\n  }\n}\n","import React from 'react'\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport { withStyles } from '@material-ui/core/styles'\nimport style from '../css/choice'\n\nexport default withStyles(style)(props => <FormControlLabel style={style} {...props} />)\n","import Button from '@material-ui/core/Button'\nimport { styled } from '@material-ui/core/styles'\nimport style from '../css/button'\n\nexport default styled(Button)(style)\n","export default {\n  background: '#f0ba2d',\n  border: 'solid #d39d0f 3px',\n  color: 'white',\n  fontSize: '1.125em',\n  padding: '.2em .75em',\n  '&:hover': {\n    background: '#2de28e',\n    borderColor: 'white'\n  }\n}\n","import React, { Component } from 'react'\nimport Lottie from 'react-lottie';\n\nimport * as animation from \"../animations/correct.json\"\n\nconst defaultOptions = {\n    animationData: animation.default,\n    loop: false\n}\n\nfunction Correct(){\n  return(\n    <Lottie\n      options={defaultOptions}\n      isStopped={false}\n      isPaused={false}\n      loop={false}\n      height={100}\n      width={100}\n      speed={10}\n     />\n  )\n}\n\nexport default Correct;\n","import React, { Component } from 'react'\nimport Lottie from 'react-lottie';\n\nimport * as animation from \"../animations/incorrect.json\"\n\nconst defaultOptions = {\n    animationData: animation.default,\n    loop: false\n}\n\nfunction Incorrect(){\n  return(\n    <Lottie\n      options={defaultOptions}\n      isStopped={false}\n      isPaused={false}\n      loop={false}\n      height={100}\n      width={100}\n     />\n  )\n}\n\nexport default Incorrect;\n","import React, { Fragment, useState, useEffect, useContext } from 'react'\n\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport FormControl from '@material-ui/core/FormControl'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport { Random } from 'react-animated-text'\nimport Grid from '@material-ui/core/Grid'\nimport Bounce from 'react-reveal/Bounce'\n\nimport Select from '../assets/components/select'\nimport Choice from '../assets/components/choice'\nimport Button from '../assets/components/button'\nimport Correct from '../assets/components/correct'\nimport Incorrect from '../assets/components/incorrect'\n\nimport { store } from '../state'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nfunction Question(props) {\n  const [ activeComponent, setComponent ] = useState(<Title />)\n\n  let { state, dispatch } = useContext(store)\n  let { glossaries } = state\n  let { index } = props\n\n  let metadata = Object.entries(glossaries)[index][1]\n\n  const answerQuestion = async(selection) => {\n    if(metadata.options[selection] == metadata.answer){\n      await setComponent(<Correct />)\n      await dispatch({ type: 'ANS' })\n      await delay(3000)\n    } else {\n      await setComponent(<Incorrect />)\n      await delay(3000)\n    } props.next()\n  }\n\n  function Title(){\n    const [ questionReveal, setReveal ] = useState(true)\n\n    useEffect(() => {\n      const animateRender = async() => {\n        await delay(2000)\n        await setReveal(false)\n        await delay(2000)\n        setComponent(<Query />)\n      }\n      animateRender()\n    }, [])\n\n\n    return(\n      <Grid item>\n        <Bounce opposite when={questionReveal}>\n          <div className=\"question-notation\">\n            <Random\n            text={`Question ${index + 1}`}\n            iterations={1}\n            effect=\"verticalFadeIn\"\n            effectChange={2}\n            effectDirection=\"up\"\n            />\n          </div>\n        </Bounce>\n      </Grid>\n    )\n  }\n\n  function Query() {\n    const [ value, setValue ] = useState(0)\n\n    let { options, excerpt } = metadata\n\n    const handleChange = event => {\n      setValue(event.target.value)\n    }\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        answerQuestion('blank')\n      }, 15000);\n      return () => clearTimeout(timer);\n    }, [ ])\n\n    return(\n      <Fragment>\n        <Grid item>\n          <div className=\"question-timer\">\n            <CountdownCircleTimer\n              durationSeconds={15}\n              colors={[\n                ['#f0ba2d' , 0]\n              ]}\n              trailColor='white'\n              strokeWidth={6}\n              size={50}\n              isPlaying\n             />\n          </div>\n          <h1 className=\"question-title\"> {excerpt} </h1>\n        </Grid>\n        <Grid item>\n          <FormControl component=\"fieldset\">\n            <RadioGroup aria-label=\"options\" onChange={handleChange} style={{ paddingLeft: '2em', paddingBottom: '2em' }}>\n              <Choice value={0} control={<Select checked={value == 0}/>} label={options[0]} />\n              <Choice value={1} control={<Select checked={value == 1}/>} label={options[1]} />\n              <Choice value={2} control={<Select checked={value == 2}/>} label={options[2]} />\n              <Choice value={3} control={<Select checked={value == 3}/>} label={options[3]} />\n              <Choice value={4} control={<Select checked={value == 4}/>} label={options[4]} />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Button onClick={() => answerQuestion(value)}> Answer </Button>\n        </Grid>\n      </Fragment>\n    )\n  }\n\n  useEffect(() => {\n    metadata = Object.entries(glossaries)[index][1]\n    setComponent(<Title />)\n  }, [ props.index ])\n\n  return(\n    <Fragment>\n      {activeComponent}\n    </Fragment>\n  )\n}\n\nexport default Question\n","import React, { Fragment, useState, useEffect, useContext } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Bounce from 'react-reveal/Bounce'\n\nimport { store } from '../state'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nfunction Score(props) {\n  const [ feedback, setFeedback ] = useState(null)\n  const [ revealState, setReveal ] = useState(false)\n\n  let { state } = useContext(store)\n  let { score } = state\n\n  const getFeedback = () => {\n    let targetComponent = document.getElementsByClassName('val')[0]\n    let comment = null\n    let color = null\n\n    if(score < 4) {\n      comment = 'Better luck next time.'\n      color = 'red'\n    } else if(score == 4){\n      comment = 'You know your stuff, just about.'\n      color = 'orange'\n    } else if(score <= 6) {\n      comment = 'You have got some potential!'\n      color = 'orange'\n    } else if(score <= 8) {\n      comment = 'Impressive.'\n      color = '#f0ba2d'\n    } else if(score <= 9){\n      comment = 'Wow, just wow.'\n      color = '#f0ba2d'\n    } else if(score == 10){\n      comment = 'You must be an expert, right?'\n      color = '#2de28e'\n    }\n\n    targetComponent.style.color = color\n    setFeedback(comment)\n  }\n\n  useEffect(() => {\n    const animateRender = async() => {\n      await delay(1000)\n      await setReveal(true)\n    }\n    getFeedback()\n    animateRender()\n  }, [ ])\n\n  return(\n    <Fragment>\n      <Grid item>\n        <Bounce top>\n          <h1> {feedback} </h1>\n        </Bounce>\n      </Grid>\n      <Grid item>\n        <Bounce bottom when={revealState}>\n          <h2> Your score: </h2>\n          <p className=\"score\">\n            <span className=\"val\">{state.score}</span>/10\n          </p>\n        </Bounce>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default Score\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport Button from '../assets/components/button'\nimport Grid from '@material-ui/core/Grid'\nimport Bounce from 'react-reveal/Bounce'\n\nimport logo from \"../assets/images/logo.svg\"\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nfunction Start(props){\n  const [ revealState, setReveal ] = useState(false)\n\n  useEffect(() => {\n    const animateRender = async() => {\n      await delay(1000)\n      await setReveal(true)\n    }\n    animateRender()\n  }, [])\n\n  return(\n    <Fragment>\n      <Grid item>\n        <Bounce bottom>\n          <img className=\"nav-logo\" src={logo} />\n          <h1> Up for a challenge? </h1>\n        </Bounce>\n      </Grid>\n      <Grid item>\n        <Bounce bottom when={revealState}>\n          <Button onClick={props.next}> Start </Button>\n        </Bounce>\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default Start;\n","import React, { Fragment, useState, useContext, useEffect } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport { getQuestions } from './utils/REST'\nimport { store } from './state'\n\nimport Loader from './assets/components/loader'\nimport Question from './pages/question'\nimport Score from './pages/score'\nimport Start from './pages/start'\n\nimport './assets/css/main.css'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nfunction App() {\n  const [ quizPhase, setPhase ] = useState(<Loader />)\n  const [ qIndex, setIndex ] = useState(0)\n\n  let { state, dispatch } = useContext(store)\n\n  const setQuestion = (index) => {\n    setPhase(<Question index={index} next={() => nextQuestion(index)} />)\n  }\n\n  const nextQuestion = async(index) => {\n    let questionIndex = index + 1\n\n    if(questionIndex < 10) await setQuestion(questionIndex)\n    else setPhase(<Score />)\n  }\n\n  useEffect(() => {\n    const callQuiz = async() => {\n      const metadata = await getQuestions()\n      await delay(7500)\n\n      setPhase(<Start next={() => setQuestion(0)}/>)\n\n      await dispatch({\n        payload: metadata,\n        type: 'INIT'\n      })\n    }\n    callQuiz()\n  }, [ ])\n\n  return (\n    <main>\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh' }}>\n        {quizPhase}\n      </Grid>\n    </main>\n  );\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport * as serviceWorker from './utils/serviceWorker'\n\nimport { StateProvider } from './state'\nimport App from './App'\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.800924df.svg\";"],"sourceRoot":""}